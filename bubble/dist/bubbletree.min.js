if("object"==typeof module&&"object"==typeof module.exports)var $=require("jquery"),Raphael=require("webpack-raphael"),TWEEN=require("tween.js");var vis4=function(){};vis4.log=function(){try{null!==window.console&&console.log.apply(this,arguments)}catch(e){}},vis4.str2time=function(e){var t=e.split(".");return Math.round(.001*Date.UTC(2e3+t[0],t[1]-1,t[2]))},vis4.round=function(e,t){var i=Math.pow(10,t);return Math.round(e*i)/i},vis4.formatNumber_ksep=".",vis4.formatNumber_dsep=",",vis4.formatNumber=function(e,t){e=""+e;for(var i="",n=0,o=e.length-1;o>=0;o--)n>0&&n<e.length&&n%3==0&&(i=vis4.formatNumber_ksep+i),i=e[o]+i,n++;return i},vis4.parseTSV=function(e,t){var i,n,o=e.split("\n"),s=[];for(n=0;n<o.length;n++){var r=o[n];if(""!==r)if(t)if(0===n)i=r.split("	");else{var a={},l=r.split("	");if(l.length!=i.length)return"wrong tsv format";for(var h=0;h<i.length;h++)a[$.trim(i[h])]=$.trim(l[h]);s.push(a)}else s.push(r.split("	"))}return s},vis4.map=function(e,t){for(var i={},n=0;n<e.length;n++)i[e[n][t]]=e[n];return i},vis4.DelayedTask=function(){var e=this;e.init=function(e){var t=this,i=[];for(var n in e)n>2&&i.push(e[n]);t.func=e[2],t.scope=e[1],t.args=i,t.running=!0,t.timer=window.setTimeout(this.run.bind(t),e[0])},e.run=function(){var e=this;e.func.apply(e.scope,e.args),e.running=!1},e.cancel=function(){vis4.log("canceling timer",this),window.clearTimeout(this.timer),this.running=!1},e.init(arguments)};var vis4loadingItem=function(e,t,i,n){this.url=e,this.id=t,this.type=i,this.loader=n,this.load=function(){$.get(this.url,this.processContent.bind(this))},this.processContent=function(e){"tsv"==this.type?this.data=vis4.parseTSV(e,!0):"json"==this.type?this.data="string"==typeof e?$.parseJSON(e):e:this.data=e,this.loader.itemLoaded()}},vis4loader=function(){this.items=[],this.byID={},this.add=function(e,t,i){null===i&&(i="text");var n=new vis4loadingItem(e,t,i,this);this.items.push(n),this.byID[t]=n},this.load=function(e){this.callback=e,this.loaded=0;for(var t=0;t<this.items.length;t++)this.items[t].load()},this.itemLoaded=function(){this.loaded++,this.loaded==this.items.length&&this.callback(this)},this.get=function(e){return this.byID[e].data}},vis4color=function(e){this.h=0,this.s=.5,this.l=.8,this.v=1,this.i=1,this.r=255,this.g=0,this.b=0,this.x="#FF0000",this.u=0,this.br=1,this.K=1/180*Math.PI,("hsi"==e||"hsl"==e||"hsb"==e||"hsv"==e)&&(this.mode=e),this.log=function(e){null!==window.console&&console.log(e)},this.cos=function(e){return Math.cos(e*this.K)},this.trim=function(e){return Math.max(0,Math.min(1,e))},this.setMode=function(e){"hsv"!=e&&"hsi"!=e&&"hsl"!=e&&"hsb"!=e&&this.log("unknown color mode "+e),this.mode=e,this.rgb2hsx()},this.setHexColor=function(e){"#"!=e.charAt(0)&&(e="#"+e),4==e.length&&(e="#"+e.charAt(1)+e.charAt(1)+e.charAt(2)+e.charAt(2)+e.charAt(3)+e.charAt(3)),7!=e.length&&this.log("invalid hex color"),this.x=e,this.hex2int(),this.int2rgb(),this.rgb2hsx()},this.setRGBColor=function(e,t,i){this.r=e,this.b=i,this.g=t,this.rgb2int(),this.int2hex(),this.rgb2hsx()},this.setHSVColor=function(e,t,i){"hsv"!=this.mode&&(this.mode="hsv"),this.h=e,this.s=this.trim(t),this.v=this.trim(i),this.hsv2rgb(),this.rgb2int(),this.int2hex()},this.setHSLColor=function(e,t,i){"hsl"!=this.mode&&(this.mode="hsl"),this.h=e,this.s=this.trim(t),this.l=this.trim(i),this.hsl2rgb(),this.rgb2int(),this.int2hex()},this.setHSBColor=function(e,t,i){"hsb"!=this.mode&&(this.mode="hsb"),this.h=e,this.s=this.trim(t),this.b=this.trim(i),this.hsb2rgb(),this.rgb2int(),this.int2hex()},this.setHSIColor=function(e,t,i){"hsi"!=this.mode&&(this.mode="hsi"),this.h=e,this.s=this.trim(t),this.i=this.trim(i),this.hsi2rgb(),this.rgb2int(),this.int2hex()},this.onChange=function(){},this.rgb2int=function(){this.u=this.r<<16|this.g<<8|this.b,this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hex2int=function(){this.u=parseInt(this.x.substr(1),16),this.onChange()},this.int2hex=function(){var e="000000"+this.u.toString(16).toUpperCase();this.x="#"+e.substr(e.length-6),this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hsx2rgb=function(){switch(this.mode){case"hsv":this.hsv2rgb();break;case"hsi":this.hsi2rgb();break;case"hsl":this.hsl2rgb();break;case"hsb":this.hsb2rgb()}},this.rgb2hsx=function(){switch(this.mode){case"hsv":this.rgb2hsv();break;case"hsi":this.rgb2hsi();break;case"hsl":this.rgb2hsl();break;case"hsb":this.rgb2hsb()}},this.hue=function(e){return this._evaluate(e,"h"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.saturation=function(e){return this._evaluate(e,"s"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.lightness=function(e){return"hsl"!=this.mode?void this.log("WARNING: lightness property not available in "+this.mode+" mode"):(this._evaluate(e,"l"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.brightness=function(e){return"hsb"!=this.mode?void this.log("WARNING: brightness property not available in "+this.mode+" mode"):(this._evaluate(e,"br"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.value=function(e){return"hsv"!=this.mode?void this.log("WARNING: value property not available in "+this.mode+" mode"):(this._evaluate(e,"v"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.intensity=function(e){return"hsi"!=this.mode?void this.log("WARNING: intensity property not available in "+this.mode+" mode"):(this._evaluate(e,"i"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this._evaluate=function(e,t){"string"==typeof e?("+"!=e.charAt(0)||isNaN(e.substr(1))?"-"!=e.charAt(0)||isNaN(e.substr(1))||(this[t]=this[t]-Number(e.substr(1))):this[t]=Number(this[t])+Number(e.substr(1)),"*"!=e.charAt(0)||isNaN(e.substr(1))?"/"!=e.charAt(0)||isNaN(e.substr(1))||(this[t]=this[t]/Number(e.substr(1))):this[t]=this[t]*Number(e.substr(1))):isNaN(e)||(this[t]=Number(e))},this.rgb=function(){return[this.r,this.g,this.b]},this.hsl=function(){return[this.h,this.s,this.l]},this.rgb2hsv=function(){var e=Math.min(Math.min(this.r,this.g),this.b),t=Math.max(Math.max(this.r,this.g),this.b),i=t-e;this.v=t/255,this.s=i/t,0===this.s?this.h=void 0:(this.r==t&&(this.h=(this.g-this.b)/i),this.g==t&&(this.h=2+(this.b-this.r)/i),this.b==t&&(this.h=4+(this.r-this.g)/i),this.h*=60,this.h<0&&(this.h+=360))},this.hsv2rgb=function(){var e,t,i,n,o,s=this.h,r=this.s,a=this._rgb,l=255*this.v;if(0===this.s&&isNaN(s))this.r=this.g=this.b=l;else switch(360==s&&(s=0),s/=60,e=Math.floor(s),t=s-e,i=l*(1-r),n=l*(1-r*t),o=l*(1-r*(1-t)),e){case 0:a(l,o,i);break;case 1:a(n,l,i);break;case 2:a(i,l,o);break;case 3:a(i,n,l);break;case 4:a(o,i,l);break;case 5:a(l,i,n)}},this._rgb=function(e,t,i){this.r=e,this.g=t,this.b=i},this.rgb2hsl=function(){var e=this.r/255,t=this.g/255,i=this.b/255,n=Math.min(Math.min(e,t),i),o=Math.max(Math.max(e,t),i);this.l=(o+n)/2,o==n?(this.s=0,this.h=void 0):this.l<.5?this.s=(o-n)/(o+n):this.s=(o-n)/(2-o-n),e==o?this.h=(t-i)/(o-n):t==o?this.h=2+(i-e)/(o-n):i==o&&(this.h=4+(e-t)/(o-n)),this.h*=60,this.h<0&&(this.h+=360)},this.hsl2rgb=function(){if(0===this.s)this.r=this.g=this.b=255*this.l;else{var e,t,i=[0,0,0],n=[0,0,0];t=this.l<.5?this.l*(1+this.s):this.l+this.s-this.l*this.s,e=2*this.l-t;var o=this.h/360;i[0]=o+1/3,i[1]=o,i[2]=o-1/3;for(var s=0;3>s;s++)i[s]<0&&(i[s]+=1),i[s]>1&&(i[s]-=1),6*i[s]<1?n[s]=e+6*(t-e)*i[s]:2*i[s]<1?n[s]=t:3*i[s]<2?n[s]=e+(t-e)*(2/3-i[s])*6:n[s]=e;this.r=255*n[0],this.g=255*n[1],this.b=255*n[2]}},this.rgb2hsb=function(){this.rgb2hsl(),this.br=this._rgbLuminance()},this._rgbLuminance=function(){return(.2126*this.r+.7152*this.g+.0722*this.b)/255},this.hsb2rgb=function(){var e,t=.001,i=0,n=1,o=.5;this.l=o,this.hsl2rgb(),e=this._rgbLuminance();for(var s=0;Math.abs(e-this.br)>t&&100>s;)e>this.br?n=o:i=o,o=(i+n)/2,this.l=o,this.hsl2rgb(),e=this._rgbLuminance(),s++;this.br=e},this.rgb2hsi=function(){var e,t=this.r,i=this.g,n=this.b,o=(Math.max(Math.max(t,i),n),t+i+n);t/=o,i/=o,n/=o,e=Math.min(Math.min(t,i),n),this.i=(t+i+n)/765,this.h=this.acos((t-.5*i-.5*n)/Math.sqrt((t-i)*(t-i)+(t-n)*(i-n))),this.s=1-3*e,n>i&&(this.h=360-this.h)},this.hsi2rgb=function(){var e,t,i,n=this.h,o=this.i,s=this.s,r=this.cos;120>=n?(t=(1-s)/3,e=(1+s*r(n)/r(60-n))/3,i=1-(t+e)):240>=n?(n-=120,e=(1-s)/3,i=(1+s*r(n)/r(60-n))/3,t=1-(e+i)):(n-=240,i=(1-s)/3,t=(1+s*r(n)/r(60-n))/3,e=1-(i+t)),e=Math.min(255,e*o*3*255),i=Math.min(255,i*o*3*255),t=Math.min(255,t*o*3*255)}};vis4color.fromHex=function(e,t){null==t&&(t="hsl");var i=new vis4color(t);return i.setHexColor(e),i},vis4color.fromRGB=function(e,t,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setRGBolor(e,t,i),o},vis4color.fromHSV=function(e,t,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSVColor(e,t,i),o},vis4color.fromHSL=function(e,t,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSLColor(e,t,i),o},vis4color.fromHSB=function(e,t,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSBColor(e,t,i),o},vis4color.fromHSI=function(e,t,i,n){null===n&&(n="hsl");var o=new vis4color(n);return o.setHSIColor(e,t,i),o};var BubbleTree=function(e,t,i){var n=$.history||{callback:null,options:null,init:function(e,t){this.callback=e,this.options=t,this.load("/")},load:function(e){"function"==typeof this.callback&&this.callback(e)}},o=this;if(o.version="2.0.2",o.$container=$(e.container).empty(),o.config=$.extend({clearColors:!1,autoColors:!1,rootPath:"",minRadiusLabels:40,minRadiusAmounts:20,minRadiusHideLabels:0,cutLabelsAt:50},e),o.tooltip=e.tooltipCallback?e.tooltipCallback:function(){},e.tooltip&&(o.tooltip=e.tooltip),o.style=e.bubbleStyles,o.ns=BubbleTree,o.nodesByUrlToken={},o.nodeList=[],o.iconsByUrlToken={},o.globalNodeCounter=0,o.displayObjects=[],o.bubbleScale=1,o.globRotation=0,o.currentYear=e.initYear,o.currentCenter=void 0,o.currentTransition=void 0,o.baseUrl="",o.loadData=function(e){$.ajax({url:e,dataType:"json",success:this.setData.bind(this)})},o.setData=function(e){var t=this;e||(e=t.config.data),t.initData(e),t.initPaper(),t.initBubbles(),t.initTween(),t.initHistory()},o.initData=function(e){var t=this;e.level=0,t.preprocessData(e),t.traverse(e,0),t.treeRoot=e},o.preprocessData=function(e){var t=this,i=t.config.maxNodesPerLevel;if(i&&i<e.children.length){var n=t.sortChildren(e.children);n.reverse();var o,s=[],r=[],a=0;for(var l in e.children)i>l?s.push(e.children[l]):(r.push(e.children[l]),a+=Math.max(0,e.children[l].amount));e.children=s,e.children.push({label:"More",name:"more",amount:a,children:r,breakdown:o})}},o.traverse=function(e,t){var i,n,o=this,s=o.config.bubbleStyles;if(e.children||(e.children=[]),o.nodeList.push(e),e.famount=o.ns.Utils.formatNumber(e.amount),e.parent&&(e.level=e.parent.level+1),o.config.clearColors===!0&&(e.color=!1),s){var r=["color","shortLabel","icon"];$.each(r,function(t,i){s.hasOwnProperty("id")&&s.id.hasOwnProperty(e.id)&&s.id[e.id].hasOwnProperty(i)?e[i]=s.id[e.id][i]:e.hasOwnProperty("name")&&s.hasOwnProperty("name")&&s.name.hasOwnProperty(e.name)&&s.name[e.name].hasOwnProperty(i)?e[i]=s.name[e.name][i]:e.hasOwnProperty("taxonomy")&&s.hasOwnProperty(e.taxonomy)&&s[e.taxonomy].hasOwnProperty(e.name)&&s[e.taxonomy][e.name].hasOwnProperty(i)&&(e[i]=s[e.taxonomy][e.name][i])})}if(!e.color)if(o.config.autoColors)if(0==e.level)e.color=vis4color.fromHSL(45,.9,.5).x;else if(1==e.level){var a=e.parent.children.length;e.color=vis4color.fromHSL(t/a*360,.7,.5).x}else e.color=vis4color.fromHex(e.parent.color).lightness("*"+(.5+.5*Math.random())).x;else e.level>0?e.color=e.parent.color:e.color="#999999";for(e.children.length<2&&e.color&&(e.color=vis4color.fromHex(e.color).saturation("*.86").x),e.level>0&&(i=e.parent.children,i.length>1&&(e.left=i[(t-1+i.length)%i.length],e.right=i[(Number(t)+1)%i.length],e.right==e.left&&(e.right=void 0))),n=void 0!==e.label&&""!==e.label?e.label:void 0!==e.token&&""!==e.token?e.token:""+o.globalNodeCounter,o.globalNodeCounter++,e.urlToken=n.toLowerCase().replace(/\W/g,"-");o.nodesByUrlToken.hasOwnProperty(e.urlToken);)e.urlToken+="-";o.nodesByUrlToken[e.urlToken]=e,e.maxChildAmount=0,e.children=o.sortChildren(e.children,!0,o.config.sortBy),$.each(e.children,function(t,i){i.parent=e,e.maxChildAmount=Math.max(e.maxChildAmount,i.amount),o.traverse(i,t)}),e.breakdowns&&(e.breakdownsByName={},$.each(e.breakdowns,function(t,i){i.famount=o.ns.Utils.formatNumber(i.amount),i.name&&(e.breakdownsByName[i.name]=i)}))},o.sortChildren=function(e,t,i){var n=[],s=!0;if("label"==i?(i=o.compareLabels,t=!1):i=o.compareAmounts,e.sort(i),t){for(;e.length>0;)n.push(s?e.pop():e.shift()),s=!s;return n}return e},o.compareAmounts=function(e,t){return e.amount>t.amount?1:e.amount==t.amount?0:-1},o.compareLabels=function(e,t){return e.label>t.label?1:e.label==t.label?0:-1},o.initPaper=function(){var e,t=this,i=t.$container,n=t.treeRoot,o=i.width(),s=i.height(),r=Raphael(i[0],o,s),a=.5*Math.min(o,s)-40,l=t.ns.Vector,h=new l(.5*o,.5*s);t.width=o,t.height=s,t.paper=r,e=Math.pow((Math.pow(n.amount,.6)+2*Math.pow(n.maxChildAmount,.6))/a,1.6666666667),t.a2radBase=t.ns.a2radBase=e,t.origin=h,$(window).resize(t.onResize.bind(t))},o.onResize=function(){var e,t=this,i=t.$container,n=i.width(),o=i.height(),s=.5*Math.min(n,o)-40,r=t.treeRoot;t.paper.setSize(n,o),t.origin.x=.5*n,t.origin.y=.5*o,t.width=n,t.height=o,e=Math.pow((Math.pow(r.amount,.6)+2*Math.pow(r.maxChildAmount,.6))/s,1.6666666667),t.a2radBase=t.ns.a2radBase=e,$.each(t.displayObjects,function(e,i){"bubble"==i.className&&(i.bubbleRad=t.ns.Utils.amount2rad(i.node.amount))}),t.currentCenter&&t.changeView(t.currentCenter.urlToken)},o.initTween=function(){this.tweenTimer=setInterval(this.loop,1e3/120)},o.initBubbles=function(){var e=this,t=e.treeRoot,i=!1;e.ns.Bubbles;e.bubbleClasses=[],e.config.hasOwnProperty("bubbleType")||(e.config.bubbleType=["plain"]),$.isArray(e.config.bubbleType)||(e.config.bubbleType=[e.config.bubbleType]),$.isArray(e.config.bubbleType)&&$.each(e.config.bubbleType,function(t){"icon"==e.config.bubbleType[t]&&(i=!0),e.bubbleClasses.push(e.getBubbleType(e.config.bubbleType[t]))});var n=e.createBubble(t,e.origin,0,0,t.color);e.traverseBubbles(n)},o.getBubbleType=function(e){var t=this,i=t.ns.Bubbles;switch(e){case"pie":return i.Pies;case"donut":return i.Donut;case"multi":return i.Multi;case"icon":return i.Icon;default:return i.Plain}},o.traverseBubbles=function(e){var t,i,n,o,s,r=this,a=r.ns.Utils.amount2rad,l=0,h=0,c=2*Math.PI;i=e.node.children,$.each(i,function(e,t){l+=a(t.amount)}),i.length>0&&(t=r.createRing(e.node,e.pos,0,{stroke:"#888","stroke-dasharray":"-"})),$.each(i,function(t,i){o=a(i.amount)/l*c,s=h+.5*o,isNaN(s)&&vis4.log(h,o,i.amount,l,c),i.centerAngle=s,n=r.createBubble(i,e.pos,0,s,i.color),h+=o,r.traverseBubbles(n)})},o.createBubble=function(e,t,i,n,o){var s,r=this,a=(r.ns,e.level);return isNaN(a)&&(a=0),a=Math.min(a,r.bubbleClasses.length-1),s=new r.bubbleClasses[a](e,r,t,i,n,o),r.displayObjects.push(s),s},o.createRing=function(e,t,i,n){var o,s=this,r=s.ns;return o=new r.Ring(e,s,t,i,n),s.displayObjects.push(o),o},o.changeView=function(e){var t,i,n,o=this,s=(o.paper,.35*Math.min(o.width,o.height)),r=o.ns,a=r.Utils,l=o.origin,h=a.amount2rad,c=o.treeRoot,b=o.nodesByUrlToken,u=b.hasOwnProperty(e)?b[e]:null,d=new r.Layout,p=2*Math.PI,f=o.getBubble.bind(o),v=o.getRing.bind(o),g=o.unifyAngle;if(null!==u){var m,y,w,x,k,M,T,C,B,P,N,A=!1,L=!1;for(n in o.displayObjects)o.displayObjects[n].hideFlag=!0;if(u==c||u.parent==c&&u.children.length<2){d.$(o).bubbleScale=1,d.$(l).x=.5*o.width,d.$(l).y=.5*o.height,m=f(c),u!=c&&(m.childRotation=-u.centerAngle),k=h(c.amount)+h(c.maxChildAmount)+20,B=v(c),d.$(B).rad=k;for(n in c.children)x=c.children[n],t=f(x),d.$(t).angle=g(x.centerAngle+m.childRotation),d.$(t).rad=k}else{var O=u;u.children.length<2&&(u=u.parent),P=s/(h(u.amount)+2*h(u.maxChildAmount)),d.$(o).bubbleScale=P,m=f(u),o.currentCenter&&o.currentCenter==u.left?L=!0:o.currentCenter&&o.currentCenter==u.right&&(A=!0);var R=o.shortestAngleTo;d.$(m).angle=R(m.angle,0),k=(h(u.amount)+h(u.maxChildAmount))*P+20,B=v(u),d.$(B).rad=k,y=f(u.parent),y.childRotation=-u.centerAngle;for(var H=y;H&&H.node.parent;)H=f(H.node.parent,!0),d.$(H).rad=0;d.$(y).rad=0;var I=.5*o.width;if(M=0-Math.max(.8*I-P*(h(u.parent.amount)+h(Math.max(1.15*u.amount+1.15*u.maxChildAmount,.85*u.left.amount,.85*u.right.amount))),P*h(u.parent.amount)*-1+.15*I)+I,u.left&&u.right){P*h(Math.max(u.left.amount,u.right.amount))}N=k+M,d.$(l).x=.5*o.width-M-(u!=O?.35*k:0),d.$(l).y=.5*o.height,new vis4.DelayedTask(1500,vis4,vis4.log,l,y.pos),M+=.1*o.width,B=v(u.parent),d.$(B).rad=M,d.$(m).rad=M;var U=0-(u!=O?O.centerAngle+m.childRotation:0);for(n in u.children)x=u.children[n],t=f(x),d.$(t).angle=o.shortestAngleTo(t.angle,x.centerAngle+m.childRotation+U),d.$(t).rad=k;var S=.07*o.height;u.left&&(w=u.left,T=h(w.amount)*P,C=p-Math.asin((.5*o.paper.height+T-S)/M),t=f(w),d.$(t).rad=M,d.$(t).angle=R(t.angle,C)),u.right&&(w=u.right,T=h(w.amount)*P,C=Math.asin((.5*o.paper.height+T-S)/M),t=f(w),d.$(t).rad=M,d.$(t).angle=R(t.angle,C)),u=O}for(n in o.displayObjects){var j=o.displayObjects[n];j.hideFlag&&j.visible?(d.$(j).alpha=0,"bubble"==j.className&&j.node.level>1&&(d.$(j).rad=0),d.hide(j)):j.hideFlag||(d.$(j).alpha=1,j.visible||(j.alpha=0,d.show(j)))}i=new r.Transitioner(o.currentCenter==u?0:1e3),i.changeLayout(d),o.currentTransition=i,!o.currentCenter&&$.isFunction(o.config.firstNodeCallback)&&o.config.firstNodeCallback(u),o.currentCenter=u}else a.log("node "+e+" not found")},o.unifyAngle=function(e){for(var t=Math.PI,i=2*t;e>=i;)e-=i;for(;0>e;)e+=i;return e},o.shortestAngle=function(e,t){var i=Math.PI,n=2*i,s=o.unifyAngle;e=s(e),t=s(t);var r=t-e;return r>i&&(r-=n),-i>r&&(r+=n),r},o.shortestAngleTo=function(e,t){return e+o.shortestAngle(e,t)},o.shortestLeftTurn=function(e,t){var i=o.shortestAngle(e,t);return i>0&&(i-=2*Math.PI),e+i},o.shortestRightTurn=function(e,t){var i=o.shortestAngle(e,t);return 0>i&&(i=2*Math.PI+i),e+i},o.getBubble=function(e,t){return this.getDisplayObject("bubble",e,t)},o.getRing=function(e){return this.getDisplayObject("ring",e)},o.getDisplayObject=function(e,t,i){var n,o,s=this;for(n in s.displayObjects)if(o=s.displayObjects[n],o.className==e&&o.node==t)return i||(o.hideFlag=!1),o;vis4.log(e+" not found for node",t)},o.initHistory=function(){n.init(o.urlChanged.bind(o),{unescape:",/"})},o.freshUrl="",o.urlChanged=function(e){var t=this,i=t.currentTransition;t.freshUrl||e.indexOf("/~/")&&(t.baseUrl=e.substr(0,e.indexOf("/~/"))),t.freshUrl=e,i&&i.running?(vis4.log("transition is running at the moment, adding listener"),i.onComplete(t.changeUrl.bind(t))):t.changeUrl()},o.changeUrl=function(){var e,t=this,i=t.freshUrl.split("/"),o=i[i.length-1];""===t.freshUrl&&t.navigateTo(t.treeRoot),t.nodesByUrlToken.hasOwnProperty(o)?(e=t.getUrlForNode(t.nodesByUrlToken[o]),t.freshUrl!=e?n.load(e):t.navigateTo(t.nodesByUrlToken[o],!0)):t.navigateTo(t.treeRoot)},o.navigateTo=function(e,t){var i=this;t?i.changeView(e.urlToken):n.load(i.getUrlForNode(e)),$(".bubbletree-label, .bubbletree-label2",i.$container).removeClass("current"),$(".bubbletree-label2."+e.id,i.$container).addClass("current"),$(".bubbletree-label."+e.id,i.$container).addClass("current")},o.getUrlForNode=function(e){var t=[];for(t.push(e.urlToken);e.parent;)t.push(e.parent.urlToken),e=e.parent;return t.reverse(),o.baseUrl+"/~/"+t.join("/")},o.onNodeClick=function(e){$.isFunction(o.config.nodeClickCallback)&&o.config.nodeClickCallback(e)},o.clean=function(){$(".bubbletree-label").remove()},this.loop=function(){TWEEN.update()},!o.config.hasOwnProperty("data"))throw new Error("no data");"string"==typeof o.config.data?o.loadData():new vis4.DelayedTask(1e3,o,o.setData,o.config.data)};BubbleTree.Styles={},BubbleTree.Layout=function(){var e=this;e.objects=[],e.props=[],e.toHide=[],e.toShow=[],e.$=function(e){var t,i,n,o=this;for(t in o.objects)if(i=o.objects[t],i==e)return o.props[t];return o.objects.push(e),n={},o.props.push(n),n},e.show=function(e){var t=this;t.toShow.push(e)},e.hide=function(e){var t=this;t.toHide.push(e)}},BubbleTree.Line=function(e,t,i,n,o,s){this.bc=e,this.o=i,this.angle=n,this.fromRad=o,this.attr=t,this.toRad=s,this.getXY=function(){this.x1=this.o.x+Math.cos(this.angle)*this.fromRad,this.y1=this.o.y-Math.sin(this.angle)*this.fromRad,this.x2=this.o.x+Math.cos(this.angle)*this.toRad,this.y2=this.o.y-Math.sin(this.angle)*this.toRad},this.init=function(){this.getXY(),console.log("foo","M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2,t),this.path=this.bc.paper.path("M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2).attr(this.attr)},this.draw=function(){this.getXY(),this.path.attr({path:"M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2})},this.init()},BubbleTree.Loader=function(e){var t=this;t.config=e,t.ns=BubbleTree,t.loadData=function(){var e=this,t=e.config.data;console.log("loading url ",t),$.ajax({url:t,context:e,dataType:"json",success:function(e){this.run(e)}})},t.run=function(e){var t=this,i=new BubbleTree(t.config);i.setData(e),t.config.instance=i},!t.config.hasOwnProperty("data"),"string"==typeof t.config.data?t.loadData():t.run(t.config.data)},BubbleTree.MouseEventGroup=function(e,t){var i=this;i.target=e,i.members=t,i.click=function(e){var t,i,n=this,o=n.members;n.clickCallback=e;for(t in o)i=o[t],$(i).click(n.handleClick.bind(n))},i.handleClick=function(e){var t=this;t.clickCallback({target:t.target,origEvent:e,mouseEventGroup:t})},i.hover=function(e){var t,i,n=this,o=n.members;n.hoverCallback=e;for(t in o)i=o[t],$(i).hover(n.handleMemberHover.bind(n),n.handleMemberUnHover.bind(n))},i.unhover=function(e){var t=this;t.unhoverCallback=e},i.wasHovering=!1,i.mouseIsOver=!1,i.handleMemberHover=function(e){var t=this;new vis4.DelayedTask(25,t,t.handleMemberHoverDelayed,e)},i.handleMemberHoverDelayed=function(e){var t=this;t.mouseIsOver=!0,t.wasHovering||(t.wasHovering=!0,$.isFunction(t.hoverCallback)&&t.hoverCallback({target:t.target,origEvent:e,mouseEventGroup:t}))},i.handleMemberUnHover=function(e){var t=this;t.mouseIsOver=!1,new vis4.DelayedTask(40,t,t.handleMemberUnHoverDelayed,e)},i.handleMemberUnHoverDelayed=function(e){var t=this;t.mouseIsOver||(t.wasHovering=!1,$.isFunction(t.unhoverCallback)&&t.unhoverCallback({target:t.target,origEvent:e,mouseEventGroup:t}))},i.addMember=function(e){var t=this;t.hoverCallback&&$(e).hover(t.handleMemberHover.bind(t),t.handleMemberUnHover.bind(t)),t.members.push(e)},i.removeMember=function(e){var t,i=this,n=i.members,o=[];i.clickCallback&&$(e).unbind("click"),i.hoverCallback&&$(e).unbind("mouseenter mouseleave");for(t in n)n[t]!=e&&o.push(n[t]);i.members=o}},BubbleTree.Ring=function(e,t,i,n,o){var s=this;s.className="ring",s.rad=n,s.bc=t,s.attr=o,s.origin=i,s.alpha=1,s.visible=!1,s.node=e,s.init=function(){},s.draw=function(){var e=this,t=e.origin;e.visible&&e.circle.attr({cx:t.x,cy:t.y,r:e.rad,"stroke-opacity":e.alpha})},s.hide=function(){var e=this;e.circle.remove(),e.visible=!1},s.show=function(){var e=this;e.circle=e.bc.paper.circle(i.x,i.y,e.rad).attr(e.attr),e.visible=!0,e.circle.toBack()},s.init()},BubbleTree.Transitioner=function(e){var t=this;t.duration=e,t.running=!1,t.completeCallbacks=[],t.changeLayout=function(e){var t,i,n,o,s=this;s.running=!0,s.layout=e;for(t in e.toShow)i=e.toShow[t],$.isFunction(i.show)&&i.show();for(t in e.objects)if(i=e.objects[t],void 0!==i&&null!==i)if(n=e.props[t],s.duration>0){var r=new TWEEN.Tween(i),a={};for(o in n)a[o]=n[o];r.to(a,s.duration),r.easing(TWEEN.Easing.Exponential.Out),$.isFunction(i.draw)&&r.onUpdate(i.draw.bind(i)),t==e.objects.length-1&&r.onComplete(s._completed.bind(s)),r.start()}else{for(o in n)i[o]=n[o];i&&$.isFunction(i.draw)&&i.draw()}if(0===s.duration){for(t in e.objects)i=e.objects[t],i&&$.isFunction(i.draw)&&i.draw();s._completed()}},t.onComplete=function(e){var t=this;try{$.isFunction(e)&&t.completeCallbacks.push(e)}catch(i){}},t._completed=function(){var e,t,i=this,n=i.completeCallbacks;i.running=!1;for(e in i.layout.objects)t=i.layout.objects[e],t&&$.isFunction(t.draw)&&t.draw();for(e in i.layout.toHide)t=i.layout.toHide[e],t&&$.isFunction(t.hide)&&t.hide();for(e in n)n[e]()}},BubbleTree.Utils={},BubbleTree.Utils.log=function(){try{window.hasOwnProperty("console")&&console.log.apply(this,arguments)}catch(e){}},BubbleTree.Utils.amount2rad=function(e){return Math.pow(Math.max(0,e)/BubbleTree.a2radBase,.6)},BubbleTree.Utils.formatNumber=function(e){var t="";return 0>e&&(e=-1*e,t="-"),e>=1e12?t+Math.round(e/1e11)/10+"t":e>=1e9?t+Math.round(e/1e8)/10+"b":e>=1e6?t+Math.round(e/1e5)/10+"m":e>=1e3?t+Math.round(e/100)/10+"k":t+e},BubbleTree.Vector=function(e,t){var i=this;i.x=e,i.y=t,i.length=function(){var e=this;return Math.sqrt(e.x*e.x+e.y*e.y)},i.normalize=function(e){var t=this,i=t.length();e||(e=1),t.x*=e/i,t.y*=e/i},i.clone=function(){var e=this;return new BubbleTree.Vector(e.x,e.y)}},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Plain=function(e,t,i,n,o,s){var r=BubbleTree,a=r.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=n,l.angle=o,l.color=s,l.alpha=1,l.visible=!1,l.ns=r,l.pos=r.Vector(0,0),l.bubbleRad=a.amount2rad(this.node.amount),l.container=l.bc.$container,l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,n=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=t.x+Math.cos(i)*n,e.pos.y=t.y-Math.sin(i)*n},l.init=function(){var e=this;e.getXY();e.node.shortLabel||(e.node.shortLabel=e.node.label.length>e.bc.config.cutLabelsAt+3?e.node.label.substr(0,e.bc.config.cutLabelsAt)+"...":e.node.label),e.initialized=!0},l.onclick=function(e){var t=this;t.bc.onNodeClick(t.node),t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.type="HIDE",e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},l.draw=function(){var e=this,t=Math.max(5,e.bubbleRad*e.bc.bubbleScale),i=(e.pos.x,e.pos.y,e.getXY(),e.pos.x),n=e.pos.y;if(e.visible){e.circle.attr({cx:e.pos.x,cy:e.pos.y,r:t,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:e.pos.x,cy:e.pos.y,r:t-4,"stroke-opacity":.9*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.label.show(),e.label.find("*").show(),e.label2.show(),t>=e.bc.config.minRadiusLabels?e.label2.hide():t>=e.bc.config.minRadiusAmounts?e.label.find(".bubbletree-desc").hide():t>=e.bc.config.minRadiusHideLabels?e.label.hide():(e.label.hide(),e.label2.hide()),e.label.css({width:2*t+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-t+"px",top:e.pos.y-.5*e.label.height()+"px"});var o=Math.max(70,3*t);e.label2.css({width:o+"px",opacity:e.alpha}),e.label2.css({left:i-.5*o+"px",top:n+t+"px"})}},l.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1},l.show=function(){var e=this,t=e.pos.x,i=e.pos.y,n=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(t,i,n).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(t,i,n-3).attr({stroke:"#ffffff","stroke-dasharray":"- "}),e.label=$('<div class="bubbletree-label '+e.node.id+'"><div class="bubbletree-amount">'+a.formatNumber(e.node.amount)+'</div><div class="bubbletree-desc">'+e.node.shortLabel+"</div></div>"),e.container.append(e.label),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.label2=$('<div class="bubbletree-label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.container.append(e.label2);var o=[e.circle.node,e.label,e.dashedBorder.node],s=new e.ns.MouseEventGroup(e,o);s.click(e.onclick.bind(e)),s.hover(e.onhover.bind(e)),s.unhover(e.onunhover.bind(e)),e.visible=!0},l.addOverlay=function(){var e=this;e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff",opacity:0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e))},l.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Donut=function(e,t,i,n,o,s){var r=BubbleTree,a=r.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=n,l.angle=o,l.color=s,l.alpha=1,l.visible=!1,l.ns=r,l.bubbleRad=a.amount2rad(this.node.amount),l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,n=e.rad;e.pos.x=t.x+Math.cos(i)*n,e.pos.y=t.y-Math.sin(i)*n},l.init=function(){var e=this;e.pos=new e.ns.Vector(0,0),e.getXY();var t,i,n,o=[],s=[],r=e.bc.config.bubbleStyles;e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.breakdownOpacities=[.2,.7,.45,.6,.35],e.breakdownColors=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];for(i in e.node.breakdowns)t=e.node.breakdowns[i],t.famount=a.formatNumber(t.amount),n=t.amount/e.node.amount,o.push(n),s.push(t),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(t.name)&&r.name[t.name].hasOwnProperty("opacity")&&(e.breakdownOpacities[s.length-1]=r.name[t.name].opacity),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(t.name)&&r.name[t.name].hasOwnProperty("color")&&(e.breakdownColors[s.length-1]=r.name[t.name].color,e.breakdownOpacities[s.length-1]=1);e.node.breakdowns=s,e.breakdown=o;e.initialized=!0},l.onclick=function(e){var t=this;t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.type="HIDE",e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},this.draw=function(){var e=this,t=Math.max(5,e.bubbleRad*e.bc.bubbleScale),i=(e.pos.x,e.pos.y,e.getXY(),t>20),n=e.pos.x,o=e.pos.y;if(e.visible){if(e.circle.attr({cx:n,cy:o,r:t,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:n,cy:o,r:.85*t,"stroke-opacity":.8*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.breakdown.length>1){var s,r,a,l,h,c,b,u,d,p,f=.85*t,v=.5*-Math.PI;for(s in e.breakdown){p=e.breakdown[s]*Math.PI*2,r=n+Math.cos(v)*f,c=o+Math.sin(v)*f,a=n+Math.cos(v+p)*f,b=o+Math.sin(v+p)*f,l=n+Math.cos(v+p)*t,u=o+Math.sin(v+p)*t,h=n+Math.cos(v)*t,d=o+Math.sin(v)*t,v+=p;var g="M"+r+" "+c+" A"+f+","+f+" 0 "+(p>Math.PI?"1,1":"0,1")+" "+a+","+b+" L"+l+" "+u+" A"+t+","+t+" 0 "+(p>Math.PI?"1,0":"0,0")+" "+h+" "+d+" Z";e.breakdownArcs[s].attr({path:g,"stroke-opacity":.2*e.alpha,"fill-opacity":e.breakdownOpacities[s]*e.alpha})}}i?(e.label.show(),40>t?(e.label.find(".bubbletree-desc").hide(),e.label2.show()):(e.label.find(".bubbletree-desc").show(),e.label2.hide())):(e.label.hide(),e.label2.show()),e.label.css({width:2*t*.9+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-.9*t+"px",top:e.pos.y-.53*e.label.height()+"px"});var m=Math.max(80,3*t);e.label2.css({width:m+"px",opacity:e.alpha}),e.label2.css({left:n-.5*m+"px",top:o+t+"px"})}},this.hide=function(){var e,t=this;t.circle.remove(),t.dashedBorder.remove(),t.label.remove(),t.label2.remove(),t.visible=!1;for(e in t.breakdownArcs)t.breakdownArcs[e].remove()},l.show=function(){var e,t=this,i=Math.max(5,t.bubbleRad*t.bc.bubbleScale);t.circle=t.paper.circle(t.pos.x,t.pos.y,i).attr({stroke:!1,fill:t.color}),$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node,t.circle.node),t.dashedBorder=t.paper.circle(t.pos.x,t.pos.y,.85*i).attr({stroke:"#fff","stroke-opacity":.4*t.alpha,"stroke-dasharray":". ",fill:!1}),t.label=$('<div class="bubbletree-label '+t.node.id+'"><div class="bubbletree-amount">'+a.formatNumber(t.node.amount)+'</div><div class="bubbletree-desc">'+t.node.shortLabel+"</div></div>"),
t.bc.$container.append(t.label),t.node.children.length>1&&($(t.circle.node).css({cursor:"pointer"}),$(t.label).css({cursor:"pointer"})),t.label2=$('<div class="bubbletree-label2 '+t.node.id+'"><span>'+t.node.shortLabel+"</span></div>"),t.bc.$container.append(t.label2);var n=[t.circle.node,t.label];if(t.breakdown.length>1){t.breakdownArcs={};for(e in t.breakdown){var o=t.breakdownColors[e]?t.breakdownColors[e]:"#fff",s=t.paper.path("M 0 0 L 2 2").attr({fill:o,"fill-opacity":.4*Math.random()+.3,stroke:"#fff"});t.breakdownArcs[e]=s,$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node.breakdowns[e],s.node)}for(e in t.breakdownArcs)$(t.breakdownArcs[e].node).click(t.onclick.bind(t))}var r=new t.ns.MouseEventGroup(t,n);r.click(t.onclick.bind(t)),r.hover(t.onhover.bind(t)),r.unhover(t.onunhover.bind(t)),t.visible=!0},l.arcHover=function(e){var t,i=this,n=i.bc.$container[0],o=i.breakdownArcs,s=i.node.breakdowns;for(t in o)if(o[t].node==e.target)return e.node=s[t],e.bubblePos={x:i.pos.x,y:i.pos.y},e.mousePos={x:e.pageX-n.offsetLeft,y:e.pageY-n.offsetTop},e.target=i,e.type="SHOW",void i.bc.tooltip(e);vis4.log("cant find the breakdown node")},l.arcUnhover=function(e){var t,i=this,n=i.bc.$container[0],o=i.breakdownArcs,s=i.node.breakdowns;for(t in o)if(o[t].node==e.target)return e.node=s[t],e.bubblePos={x:i.pos.x,y:i.pos.y},e.mousePos={x:e.pageX-n.offsetLeft,y:e.pageY-n.offsetTop},e.type="HIDE",e.target=i,void i.bc.tooltip(e);vis4.log("cant find the breakdown node")},l.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Icon=function(e,t,i,n,o,s){var r=BubbleTree,a=r.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=n,l.angle=o,l.color=s,l.alpha=1,l.visible=!1,l.ns=r,l.pos=r.Vector(0,0),l.bubbleRad=a.amount2rad(this.node.amount),l.iconLoaded=!1,l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,n=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=t.x+Math.cos(i)*n,e.pos.y=t.y-Math.sin(i)*n},l.init=function(){var e=this;e.getXY(),e.hasIcon=e.node.hasOwnProperty("icon"),e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.initialized=!0},l.show=function(){var e=this,t=e.pos.x,i=e.pos.y,n=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(t,i,n).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(t,i,Math.min(n-3,.95*n)).attr({stroke:"#ffffff","stroke-dasharray":"- "}),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.circle.node),e.label=$('<div class="bubbletree-label '+e.node.id+'"><div class="bubbletree-amount">'+a.formatNumber(e.node.amount)+'</div><div class="bubbletree-desc">'+e.node.shortLabel+"</div></div>"),e.bc.$container.append(e.label),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.label[0]),e.label2=$('<div class="bubbletree-label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.bc.$container.append(e.label2),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.visible=!0,e.hasIcon?e.iconLoaded?e.displayIcon():e.loadIcon():e.addOverlay()},l.loadIcon=function(){var e=this,t=new vis4loader;t.add(e.bc.config.rootPath+e.node.icon),t.load(e.iconLoadComplete.bind(e))},l.iconLoadComplete=function(e){var t,i,n,o=this;t=e.items[0].data,o.iconPathData="",t=$(t),n=$("path",t);for(i in n)n[i]&&$.isFunction(n[i].getAttribute)&&(o.iconPathData+=String(n[i].getAttribute("d"))+" ");o.iconLoaded=!0,o.displayIcon()},l.displayIcon=function(){var e,t=this;t.iconPaths=[],e=t.paper.path(t.iconPathData),e.attr({fill:"#fff",stroke:"none"}).translate(-50,-50),t.iconPaths.push(e),t.addOverlay()},l.addOverlay=function(){var e=this;if(e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff","fill-opacity":0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e)),$(e.label2).click(e.onclick.bind(e)),$.isPlainObject(e.bc.tooltip)){var t=e.bc.tooltip.content(e.node);$(e.overlay.node).qtip({position:{target:"mouse",viewport:$(window),adjust:{x:7,y:7}},show:{delay:e.bc.tooltip.delay||100},content:{title:t[0],text:t[1]}})}},l.removeIcon=function(){var e,t=this;for(e in t.iconPaths)t.iconPaths[e].remove();t.iconPaths=[]},l.draw=function(){var e,t,i,n,o,s=this,r=Math.max(5,s.bubbleRad*s.bc.bubbleScale),a=(s.pos.x,s.pos.y,s.getXY(),s.pos.x),l=s.pos.y,h=s.hasIcon&&r>15,c=s.hasIcon?r>40:r>20;if(s.visible){s.circle.attr({cx:a,cy:l,r:r,"fill-opacity":s.alpha}),s.overlay&&s.overlay.attr({cx:a,cy:l,r:Math.max(10,r)}),s.node.children.length>1?s.dashedBorder.attr({cx:s.pos.x,cy:s.pos.y,r:Math.min(r-3,r-4),"stroke-opacity":.9*s.alpha}):s.dashedBorder.attr({"stroke-opacity":0}),c?(s.label.show(),h&&70>r||!h&&40>r?(s.label.find(".bubbletree-desc").hide(),s.label2.show()):(s.label.find(".bubbletree-desc").show(),s.label2.hide())):(s.label.hide(),s.label2.show()),o=h?l+.77*r-s.label.height():l-.5*s.label.height(),s.label.css({width:(h?1.2*r:2*r)+"px",opacity:s.alpha}),s.label.css({left:(h?a-.6*r:a-r)+"px",top:o+"px"});var b=Math.max(80,3*r);if(s.label2.css({width:b+"px",opacity:s.alpha}),s.label2.css({left:a-.5*b+"px",top:l+r+"px"}),s.hasIcon)if(h){i=(r-(c?.5*s.label.height():0))/60;for(e in s.iconPaths)t=s.iconPaths[e],n="1"==Raphael.version[0]?"scale("+i+") translate("+a/i+", "+(l+(c?s.label.height()*-.5:0))/i+")":"scale("+i+") translate("+(a/i-50)+", "+((l+(c?s.label.height()*-.5:0))/i-50)+")",t.node.setAttribute("transform",n),t.attr({"fill-opacity":s.alpha})}else for(e in s.iconPaths)t=s.iconPaths[e],t.attr({"fill-opacity":0})}},l.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1,e.hasIcon&&e.removeIcon(),e.overlay&&e.overlay.remove()},l.onclick=function(e){var t=this;t.bc.onNodeClick(t.node),t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",e.target=t,t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.type="HIDE",e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},l.init()},"object"==typeof module&&"object"==typeof module.exports&&(module.exports=BubbleTree);
//# sourceMappingURL=data:application/json;base64,
